// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonFX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private WPI_TalonFX leftFrontmotor;
private WPI_TalonFX leftMidmotor;
private WPI_TalonFX leftBackmotor;
private WPI_TalonFX rightFrontmotor;
private WPI_TalonFX rightMidmotor;
private WPI_TalonFX talonFX6;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftFrontmotor = new WPI_TalonFX(1);
 
leftMidmotor = new WPI_TalonFX(2);
 
leftBackmotor = new WPI_TalonFX(3);
 
rightFrontmotor = new WPI_TalonFX(4);

rightMidmotor = new WPI_TalonFX(5);

rightBackmotor = new WPI_TalonFX(6);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    
    leftMidmotor.follow(leftFrontmotor);
    leftBackmotor.follow (leftFrontmotor);

    rightMidmotor.follow(rightFrontmotor);
    rightBackmotor.follow(rightFrontmotor);

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void run(double l,double r)
    leftFrontmotor.set(l);
    rightFrontmotor.set(r);

}

